#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Source: http://code.zekjur.net/git/i3status/tree/contrib/wrapper.py
#
# Â© 2012 Valentin Haenel <valentin.haenel@gmx.de>
#
# Updated by Samy Dindane for his needs

import os
import sys
import json
import subprocess

def get_governor():
    """ Get the current governor for cpu0, assuming all CPUs use the same. """
    with open('/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor') as fp:
        return fp.readlines()[0].strip()

def print_line(message):
    """ Non-buffered printing to stdout. """
    sys.stdout.write(message + '\n')
    sys.stdout.flush()

def read_line():
    """ Interrupted respecting reader for stdin. """
    try:
        line = sys.stdin.readline().strip()
        if not line:
            sys.exit(3)
        return line
    except KeyboardInterrupt:
        sys.exit()

if __name__ == '__main__':
    print_line(read_line())
    print_line(read_line())

    while True:
        line, prefix = read_line(), ''
        if line.startswith(','):
            line, prefix = line[1:], ','

        j = json.loads(line)

        # Start insert
        ram_usage = subprocess.check_output("free | awk 'NR==2{printf \"MEM: %.2fGB\", $3/1024/1000, $2/1024/1000, $3*100/$2 }'", shell=True)
        j.insert(0, {'full_text':  ram_usage, 'name' : 'ram_usage'})
        # End insert

        print_line(prefix+json.dumps(j))
